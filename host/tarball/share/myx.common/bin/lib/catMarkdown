#!/bin/sh

##### !!! This script is universal for FreeBSD, Darwin, Ubuntu. !!! #####

if type CatMarkdown >/dev/null 2>&1 ; then
	return 0
fi

CatMarkdown() {
	set -e

	local doStripAll doForceTty doBasicSed
	while [ $# -gt 0 ]; do
		case "$1" in
			--strip-all) shift ; doStripAll=yes ;;
			--force-tty) shift ; doForceTty=yes ;;
			--basic-sed) shift ; doBasicSed=yes ;;
		esac
		break;
	done

	local fromFile="$1"
	if [ -n "$fromFile" ] ; then
		if [ ! -f "$fromFile" ] ; then
			echo "â›” ERROR: CatMarkdown: file not found: $fromFile" >&2
			set +e ; return 1
		fi
		shift
		# cat "$fromFile" | CatMarkdown
		# return 0
	fi

	local awkFile='' useAnsi=''

	if [ -z "$doBasicSed" ]; then
		awkFile="${MYXROOT:-/usr/local/share/myx.common}/include/data/catMarkdown.awk"
	fi

	if [ -z "$doStripAll" ]; then
		if [ -n "$doForceTty" ] ; then
			useAnsi=--use-ansi
		elif
			[ -t 1 ] \
			&& [ -n "${TERM-}" ] && [ "$TERM" != dumb ] \
			&& tput colors >/dev/null 2>&1 \
			&& [ "$(tput colors)" -ge 8 ] \
		; then
			useAnsi=--use-ansi
		fi
	fi

	if [ -f "$awkFile" ]; then
		cat "${fromFile:-'-'}" | awk -f "$awkFile" -- $useAnsi
		return 0
	fi
	
	local COLUMNSEP=$'\x1F'

	sed \
		-e 's|\t|    |g' \
		"${fromFile:-'-'}" \
	| if [ -n "$useAnsi" ]; then
		# ANSI codes
		esc=$(printf '\033')
		reset="${esc}[0m"
		bold_on="${esc}[1m"   bold_off="${esc}[22m"
		ital_on="${esc}[3m"   ital_off="${esc}[23m"
		code_on="${esc}[96m"  code_off="${reset}"
		quote_on="${esc}[90m" quote_off="${reset}"
		bullet_on="${esc}[32m" bullet_off="${reset}"
		hdr1_on="${esc}[95m"  hdr2_on="${esc}[94m"  hdr3_on="${esc}[92m"
		hdr_off="${reset}"

		sed -E \
		-e "s/^###### (.*)/${hdr1_on}\1${hdr_off}/" \
		-e "s/^##### (.*)/${hdr1_on}\1${hdr_off}/" \
		-e "s/^#### (.*)/${hdr2_on}\1${hdr_off}/" \
		-e "s/^### (.*)/${hdr2_on}\1${hdr_off}/" \
		-e "s/^## (.*)/${hdr3_on}\1${hdr_off}/" \
		-e "s/^# (.*)/${hdr3_on}\1${hdr_off}/" \
		-e "s/^([[:space:]]*)> +(.*)/\1${quote_on}> ${quote_off}\2/" \
		-e "s/^([[:space:]]*)([0-9]+)\. +(.*)/\1${bullet_on}ðŸ‘‰ ${bullet_off}\3/" \
		-e "s/^([[:space:]]*)[-*] +(.*)/\1${bullet_on}âž¤ ${bullet_off}\2/" \
		-e "s/\*\*([^*]+)\*\*/${bold_on}\1${bold_off}/g" \
		-e "s/_([^_]+)_/${ital_on}\1${ital_off}/g" \
		-e "s/\`\`\`([^\`]+)\`\`\`/${code_on}\1${code_off}/g" \
		-e '/^[[:space:]]*```([^`[:space:]]+)?[[:space:]]*$/,/^[[:space:]]*```[[:space:]]*$/ {
			/^[[:space:]]*```([^`[:space:]]+)?[[:space:]]*$/d
			s/.*/'"${code_on}"'&'"${code_off}"'/
		}' \
  		-e "s/\`([^\`]+)\`/${code_on}\1${code_off}/g"
	else
		sed -E \
		-e 's/^#{1,6} //g' \
		-e 's/^([[:space:]]*)> +(.*)/\1\2/' \
		-e 's/^([[:space:]]*)([0-9]+)\. +(.*)/\1- \3/' \
		-e 's/^([[:space:]]*)[-*] +(.*)/\1- \2/' \
		-e 's/\*\*([^*]+)\*\*/\1/g' \
		-e 's/_([^_]+)_/\1/g' \
		-e 's/\`\`\`([^`]+)\`\`\`/\1/g' \
		-e 's/\`([^`]+)\`/\1/g'
	fi \
	| sed \
		-e '$!N; /^\n$/!P; D' \
		-e '/^[[:space:]]*\|?[-:]+(\|[-:]+)+\|?[[:space:]]*$/d' \
	| sed -e 's/^$/__BLANK__/g' -e 's/||/'"$COLUMNSEP"'/g' \
	| column -s "$COLUMNSEP" -t \
	| sed -e 's/'"$COLUMNSEP"'/||/g' -e 's/^__BLANK__$//'
}

case "$0" in
	*/myx.common/bin/lib/catMarkdown) 
		if [ -z "$1" ] || [ "$1" = '--help' ] ; then
			. "${MYXROOT:-/usr/local/share/myx.common}/include/help/lib/catMarkdown.help.include"
			exit 1
		fi
		set -e
		CatMarkdown "$@"
	;;
esac
