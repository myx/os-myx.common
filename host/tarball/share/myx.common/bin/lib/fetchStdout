#!/bin/sh

##### !!!    This script is universal for FreeBSD, Darwin, Ubuntu.    !!! #####
##### !!! THIS SCRIPT MAY BE OVERRIDEN IN OS-DEPENDENT IMPLEMENTATION !!! #####

FetchStdout(){
	if [ "$1" = "--local-cache" ] ; then
		shift
		local LOCAL_CACHE="$1"
		[ -z "$LOCAL_CACHE" ] && echo "ERROR: FetchStdout: The CACHE_ROOT is required!" >&2 && exit 1
		shift
	else
		local LOCAL_CACHE="$ENV_FETCH_LOCAL_CACHE"
	fi
	
	local URL="$1"
	[ -z "$URL" ] && echo "ERROR: FetchStdout: The URL is required!" >&2 && exit 1
	
	set -e

	if [ ! -z "$LOCAL_CACHE" ] ; then
		local CHECK_URL="`echo $URL | sed 's~^http[s]*://~~g'`"
		if [ -f "$LOCAL_CACHE/$CHECK_URL" ] ; then
			echo "FetchStdout: using local cache: $CHECK_URL" >&2 
			cat "$LOCAL_CACHE/$CHECK_URL"
			return 0
		fi
	fi
	
	if [ ! -z "`which curl || true`" ]  ; then curl --silent -L $URL  ; return 0 ; fi
	if [ ! -z "`which fetch || true`" ] ; then fetch -o - $URL        ; return 0 ; fi
	if [ ! -z "`which wget || true`" ]  ; then wget --quiet -O - $URL ; return 0 ; fi

	echo "ERROR: curl, fetch or wget were not found, do not know how to download!" >&2 
	exit 1
}

case "$0" in
	*/myx.common/bin/lib/fetchStdout) 
		if [ -z "$1" ] ; then
			echo "Syntax: myx.common lib/fetchStdout [--local-cache <cache-root> [--check-cache]] URL" >&2
			echo >&2
			echo " ENV_FETCH_LOCAL_CACHE environment variable is used by default." >&2 
			exit 1
		fi
		set -e
		FetchStdout "$@"
	;;
esac
