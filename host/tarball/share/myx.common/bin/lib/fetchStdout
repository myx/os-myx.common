#!/bin/sh

##### !!!    This script is universal for FreeBSD, Darwin, Ubuntu.    !!! #####
##### !!! THIS SCRIPT MAY BE OVERRIDEN IN OS-DEPENDENT IMPLEMENTATION !!! #####

FetchStdout(){
	# declare all locals up front
	local CACHE_ROOT URL KEY cmd

	# parse optional --local-cache
	if [ "$1" = "--local-cache" ]; then
		shift ; CACHE_ROOT=$1
		[ -n "$CACHE_ROOT" ] || { printf '⛔ ERROR: FetchStdout: The CACHE_ROOT is required!\n' >&2; exit 1; }
		shift
	else
		CACHE_ROOT=${ENV_FETCH_LOCAL_CACHE-}
	fi

	# require URL
	URL=$1
	[ -n "$URL" ] || { printf '⛔ ERROR: FetchStdout: The URL is required!\n' >&2; exit 1; }
	set -e

	# try local cache
	if [ -n "$CACHE_ROOT" ]; then
		KEY=$(printf '%s' "$URL" | sed 's~^https\?://~~')
		if [ -f "$CACHE_ROOT/$KEY" ]; then
			printf 'FetchStdout: using local cache: %s\n' "$KEY" >&2
			cat "$CACHE_ROOT/$KEY"
			return 0
		fi
	fi

	# try curl, fetch, wget
	for cmd in curl fetch wget; do
		if command -v "$cmd" >/dev/null 2>&1; then
			case "$cmd" in
				curl)  curl --silent -L "$URL" ;;
				fetch) fetch -o - "$URL"   ;;
				wget)  wget --quiet -O - "$URL" ;;
			esac
			return 0
		fi
	done

	printf '⛔ ERROR: curl, fetch or wget not found - cannot download!\n' >&2
	exit 1
}

case "$0" in
	*/myx.common/bin/lib/fetchStdout) 
		if [ -z "$1" ] ; then
			echo "Syntax: myx.common lib/fetchStdout [--local-cache <cache-root> [--check-cache]] URL" >&2
			echo >&2
			echo " ENV_FETCH_LOCAL_CACHE environment variable is used by default." >&2 
			exit 1
		fi
		set -e
		FetchStdout "$@"
	;;
esac
