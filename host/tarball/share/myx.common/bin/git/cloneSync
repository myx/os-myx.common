#!/bin/sh

##### !!! This script is universal for FreeBSD, Darwin, Ubuntu. !!! #####

GitCloneSync(){
	set -e

	if [ "$1" = "--no-write" ] ; then
		local noWrite=true
		shift
	fi
	if [ "$1" = "--no-push" ] ; then
		local noWrite=true
		local noPush=true
		shift
	fi

	local tgtPath="$1"
	[ -z "$tgtPath" ] && echo "ERROR: GitCloneSync: tgtPath is required!" >&2 && return 1

	local repoUrl="$2"
	[ -z "$repoUrl" ] && echo "ERROR: GitCloneSync: repoUrl is required!" >&2 && return 1

	local specificBranch="$3"
	
	local currentPath="`pwd`"
	
	if [ -d "$tgtPath" ] ; then
		cd "$tgtPath"
		if [ "$noPush" != "true" ] && [ ! -d ".git" ] && [ "0" = "`git ls-remote --exit-code -h "$repoUrl" ; echo $? | tr '2' '0'`" ] ; then
			echo "GitCloneSync: Initializing git repository..." >&2
			git init
			git remote add origin "$repoUrl"
			git add .
			git commit -m "GitCloneSync: Initial commit"
			git push -u origin master
		fi
		
		git rev-parse --abbrev-ref HEAD > /dev/null \
			&& [ "`git rev-parse --abbrev-ref HEAD`" != "${specificBranch:-master}" ] \
			&& cd "$tgtPath/.." \
			&& rm -rf "$tgtPath" \
		|| true
	fi
	if [ ! -d "$tgtPath" ] ; then
	    echo "GitCloneSync: $tgtPath: creating..." >&2
	    mkdir -p "$tgtPath"
		if ! git clone "$repoUrl" "$tgtPath" ; then
		    rm -rf "$tgtPath"
		    return 1
		fi
	fi
    if [ "$noWrite" != "true" ] && [ ! -f "$tgtPath/README.md" -a ! -f "$tgtPath/README.MD" ] ; then
        cd "$tgtPath"
        touch README.md
        git add README.md
        git commit -m "add/touch README"
        git push -u
    fi
	if [ -d "$tgtPath" ] ; then
	    cd "$tgtPath"
	    echo "GitCloneSync: $tgtPath: updating..." >&2
	    git remote set-url origin "$repoUrl"
	    if [ -n $specificBranch ] ; then
	    	git checkout $specificBranch
	    fi
	    git pull
	    if [ "$noPush" != "true" ] && ! git diff --quiet "@{push}" HEAD ; then
	    	git push
	    fi
	    echo "GitCloneSync: $tgtPath: finished." >&2
	fi
	
	cd "$currentPath"
}

case "$0" in
	*/myx.common/bin/git/cloneSync) 
		if [ -z "$1" ] ; then
			echo "Syntax: myx.common git/cloneSync [--no-write/--no-push] dst_path repo_url [branch]" >&2
			echo "    If 'branch' argument is not set, 'master' will be used as default." >&2
			echo "    '--no-push' implies '--no-write' and is equivalent to: 'myx.common git/clonePull'." >&2
			exit 1
		fi
		set -e
		GitCloneSync "$@"
	;;
esac
