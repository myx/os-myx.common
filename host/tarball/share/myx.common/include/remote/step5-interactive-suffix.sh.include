#!/bin/sh

export PS1='\[\e]0;RemoteShell: \u@\h: \w\a\]\[\e[0;32m\]\u@\H\[\e[m\]:\[\e[0;34m\]\w\[\e[m\]\[\e[0;32m\]\$\[\e[m\] \[\e[0m\]'

SHELL_NAME="bash"

history -c ; history -w

export PROMPT_COMMAND='history -w; history -r'
shopt -s histappend cmdhist checkwinsize

echo "Remote: ✅ interactive shell ready."

########################
# restore stdin
########################


exec 0<&3 3<&-

#for i in $(seq 1 $(tput lines)); do echo; done
#reset
tput reset >/dev/null 2>&1 || :
stty sane >/dev/null 2>&1 || :
stty ixon ixoff >/dev/null 2>&1 || :
stty echo >/dev/null 2>&1 || :

bind -r "\e[5~"
bind -r "\e[6~"
bind "set bell-style audible"



set +e               # don't crash on shell errors
set -u               # catch unset vars
set -o pipefail      # catch pipeline failures

# enable history and nice editing
[ ! -f ~/.bashrc ] || { . ~/.bashrc ; }

if [ -d "$IMAGE_UNPACK_DIR" ]; then
	# set once
	: "${ORIG_PS1:=$PS1}"

	cut_pwd() {
		local d=${PWD#$IMAGE_UNPACK_DIR}
		if [ "$d" = "$PWD" ]; then
			printf '[🏠-host] %s\n' "$PWD"
			#printf '[remote.host] %s\n' "$PWD"
		else
			printf '[⛺️-base] %s\n' "${d:-/}"
			#printf '[remote.base] %s\n' "${d:-/}"
		fi
	}

	# rebuild PS1: swap out \w
	PS1=$(printf '%s\n' "$ORIG_PS1" | sed 's|\\w|\$(cut_pwd)|g')
fi

( dd bs=1 iflag=nonblock count=65536 2>/dev/null || : ) >/dev/null
